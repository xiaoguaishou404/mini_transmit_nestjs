name: Docker Build and Deploy

on:
  push:
    branches: ['main']

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.prod
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/mini_transmit_nestjs:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # 创建项目目录（如果不存在）
            mkdir -p ~/mini_transmit_nestjs
            cd ~/mini_transmit_nestjs

            # 创建环境变量文件
            echo "${{ secrets.ENV_FILE }}" > .env
            echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> .env

            # 下载最新的docker-compose文件
            curl -o docker-compose.prod.yml https://raw.githubusercontent.com/${{ github.repository }}/main/docker-compose.prod.yml

            # 检查必要文件是否存在
            echo "检查必要文件..."
            if [ ! -f "docker-compose.prod.yml" ]; then
              echo "错误: docker-compose.prod.yml 文件不存在"
              exit 1
            fi


            if [ ! -f ".env" ]; then
              echo "错误: .env 文件不存在"
              exit 1
            fi


            echo "所有必要文件检查通过"

            # 拉取最新的Docker镜像
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/mini_transmit_nestjs:latest

            # 重启服务
            sudo docker-compose -f docker-compose.prod.yml down
            sudo docker-compose -f docker-compose.prod.yml up -d
